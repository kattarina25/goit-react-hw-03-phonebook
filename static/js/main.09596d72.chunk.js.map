{"version":3,"sources":["components/ContactForm/ContactsForm.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/Section/Section.js","components/ContactForm/ContactsForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","ContactsForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","validateContact","alert","props","onSubmit","reset","this","isExistContact","includes","toLowerCase","contactName","type","onChange","pattern","required","Component","Filter","search","placeholder","ContactItem","contact","deleteContact","onClick","ContactList","contacts","contactList","map","id","key","App","filter","formSubmitHandler","prevState","uuidv4","getContactsName","getFilteredContacts","normalizedFilter","changeFilter","localStorage","getItem","JSON","parse","setItem","stringify","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09596d72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsForm\":\"ContactsForm_ContactsForm__EzEGg\",\"contactName\":\"ContactsForm_contactName__13UxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__16kIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1qHOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Filter_search__AAUyf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2yzyH\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}> {children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </section>\n);\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactsForm.module.css';\n\nclass ContactsForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    isExistContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  validateContact() {\n    const { name } = this.state;\n    const { isExistContact } = this.props;\n    return isExistContact().includes(name.toLowerCase());\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.validateContact()) {\n      alert(`${this.state.name} is already in contacts`);\n    } else {\n      this.props.onSubmit({ ...this.state });\n    }\n    this.reset();\n  };\n\n  reset() {\n    this.setState({ name: '', number: '' });\n  }\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.ContactsForm}>\n        <label>\n          Name\n          <br />\n          <input\n            className={styles.contactName}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Phone number\n          <br />\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"[0-9]{7}\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactsForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <div className={styles.search}>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      placeholder=\"Searching...\"\n    />\n  </div>\n);\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ contact, deleteContact }) => {\n  const { name, number } = contact;\n\n  return (\n    <>\n      {name} : {number}\n      <button type=\"button\" onClick={deleteContact}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.exact({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <ul className={styles.contactList}>\n    {contacts.map(({ id, ...contact }) => (\n      <li key={id}>\n        <ContactItem\n          contact={contact}\n          deleteContact={() => deleteContact(id)}\n        />\n      </li>\n    ))}\n  </ul>\n);\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport ContactsForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    if (contacts) this.setState({ contacts: JSON.parse(contacts) });\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState)\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n  }\n\n  formSubmitHandler = contact => {\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, { id: uuidv4(), ...contact }],\n    }));\n  };\n\n  getContactsName = () => {\n    const { contacts } = this.state;\n    return contacts.map(contact => contact.name.toLowerCase());\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactsForm\n            onSubmit={this.formSubmitHandler}\n            isExistContact={this.getContactsName}\n          />\n        </Section>\n        {contacts.length > 0 && (\n          <Section title=\"Contacts\">\n            <Filter value={filter} onChange={this.changeFilter} />\n            <ContactList\n              contacts={this.getFilteredContacts()}\n              deleteContact={this.deleteContact}\n            />\n          </Section>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}